# The name of the workflow
name: Polybot Build Prod

on:
  pull_request:
    branches:
     - main
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write  # ðŸ‘ˆ Required to post comments on PR

jobs:
  Build:
    runs-on: ubuntu-latest
    environment: production
    outputs:
      output1: ${{ steps.step1.outputs.image }}
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
        run :
          echo "Building Docker image for prod branch"

      - id: step1
        run: |
          docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_TOKEN }}"
          img_name="/polybot_build_prod:${{github.run_number}}"
          # same docker_image to pass it to the next workflow 
          echo "image=$img_name" >> "$GITHUB_OUTPUT"
          echo "Building Docker image: ${{ secrets.DOCKERHUB_USERNAME }}$img_name"
          # build & push the image 
          docker build --push -t "${{ secrets.DOCKERHUB_USERNAME }}$img_name"  .
  Scan:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install wget -y
          wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.51.1_Linux-64bit.deb
          sudo dpkg -i trivy_0.51.1_Linux-64bit.deb

      - name: Pull built image
        run: |
          docker pull "${{ secrets.DOCKERHUB_USERNAME }}${{ needs.Build.outputs.output1 }}"

      - name: Scan Docker image for vulnerabilities
        run: |
          trivy image --severity CRITICAL,HIGH --exit-code 1 --format table "${{ secrets.DOCKERHUB_USERNAME }}${{ needs.Build.outputs.output1 }}"

  Deploy:
    needs: Build
    uses: ./.github/workflows/deploy_polybot.yaml
    with:
      image: ${{needs.Build.outputs.output1}}
    secrets:
      EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
      APP_CERT: ${{ secrets.APP_CERT }}
      TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
      DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      APP_NGINX_URL : ${{ secrets.APP_NGINX_URL }}
      QUEUE_URL: ${{ secrets.QUEUE_URL }}